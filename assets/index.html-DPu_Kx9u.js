import{_ as a,c as d,a as e,o as h}from"./app-CQfiJkfp.js";const r={};function n(o,t){return h(),d("div",null,[...t[0]||(t[0]=[e('<p>所有逻辑门都可以使用与非门来组合 与非门（NAND）： 两个输入有一个为0时那么输出1，只有两个输入位都为1时输出0。 非门（NOT）： 输出和输入相反。单输入逻辑门 与门（AND）： 两个输入只要有一个输入为0就输出0，只有两个输入都为1时输出1 或非门（NOR）： 两个输入有一个为1就输出0，只有两个输入位都为0时才输出1。 或门（OR）： 两个输入中有一个是1那么输出就是1，只有两个输入都为0是才输出0 异或门（XOR）： 两个输入不同时输出1，两个输入相同时输出0 同或门（XNOR）： 两个输入不同时输出0，两个输入相同时输出1</p><blockquote><p>[!think]+ 思考，如何使用与非门搭建一个逻辑电路【高电平】，拥有一个输入一个输出，无论输入如何，使得输出都为1？</p></blockquote><hr><h2 id="补充概念" tabindex="-1"><a class="header-anchor" href="#补充概念"><span>补充概念</span></a></h2><h3 id="与非门-nand" tabindex="-1"><a class="header-anchor" href="#与非门-nand"><span>与非门 (NAND)</span></a></h3><p>两个输入有一个为0时那么输出1，只有两个输入位都为1时输出0</p><p>与非门真值表：</p><table><thead><tr><th>输入0</th><th>0</th><th>1</th><th>0</th><th>1</th></tr></thead><tbody><tr><td>输入1</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>输出</td><td>1</td><td>1</td><td>1</td><td>0</td></tr></tbody></table><p>和与门输出相反。</p><h3 id="非门-not" tabindex="-1"><a class="header-anchor" href="#非门-not"><span>非门 (NOT)</span></a></h3><p>输出和输入相反。单输入逻辑门 非门真值表：</p><table><thead><tr><th>输入</th><th>0</th><th>1</th></tr></thead><tbody><tr><td>输出</td><td>1</td><td>0</td></tr></tbody></table><p>使用与非门构建: 相当于取与非门真值表的第1、4列</p><h3 id="与门-and" tabindex="-1"><a class="header-anchor" href="#与门-and"><span>与门 (AND)</span></a></h3><p>两个输入只要有一个输入为0就输出0，只有两个输入都为1时输出1 与门真值表：</p><table><thead><tr><th>输入0</th><th>0</th><th>1</th><th>0</th><th>1</th></tr></thead><tbody><tr><td>输入1</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>输出</td><td>0</td><td>0</td><td>0</td><td>1</td></tr></tbody></table><p>使用与非门和非门组合： 相当于把与非门真值表的输出取反</p><h3 id="或非门-nor" tabindex="-1"><a class="header-anchor" href="#或非门-nor"><span>或非门 (NOR)</span></a></h3><p>两个输入有一个为1就输出0，只有两个输入位都为0时才输出1。 或非门真值表：</p><table><thead><tr><th>输入0</th><th>0</th><th>1</th><th>0</th><th>1</th></tr></thead><tbody><tr><td>输入1</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>输出</td><td>1</td><td>0</td><td>0</td><td>0</td></tr></tbody></table><p>和或门输出相反。</p><p>使用与非门和非门组合： 相当于把与非门真值表的输入和输出都取反</p><h3 id="或门-or" tabindex="-1"><a class="header-anchor" href="#或门-or"><span>或门 (OR)</span></a></h3><p>两个输入中有一个是1那么输出就是1，只有两个输入都为0是才输出0 真值表</p><table><thead><tr><th>输入0</th><th>0</th><th>1</th><th>0</th><th>1</th></tr></thead><tbody><tr><td>输入1</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>输出</td><td>0</td><td>1</td><td>1</td><td>1</td></tr></tbody></table><p>使用与非门和已有的非门组合： 相当于把与非门真值表的输入取反</p><h3 id="异或门-xor" tabindex="-1"><a class="header-anchor" href="#异或门-xor"><span>异或门 (XOR)</span></a></h3><blockquote><p>两个输入不同时输出1，两个输入相同时输出0</p></blockquote><p>符号：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊕</mo></mrow><annotation encoding="application/x-tex">\\oplus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">⊕</span></span></span></span></p><p>真值表：</p><table><thead><tr><th>输入0</th><th>0</th><th>1</th><th>0</th><th>1</th></tr></thead><tbody><tr><td>输入1</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>输出</td><td>0</td><td>1</td><td>1</td><td>0</td></tr></tbody></table><p>使用与非门和已有的或门、与门组合：</p><h3 id="同或门-xnor" tabindex="-1"><a class="header-anchor" href="#同或门-xnor"><span>同或门 (XNOR)</span></a></h3><p>两个输入不同时输出0，两个输入相同时输出1 符号：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊙</mo></mrow><annotation encoding="application/x-tex">\\odot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">⊙</span></span></span></span> 异或门真值表：</p><table><thead><tr><th>输入0</th><th>0</th><th>1</th><th>0</th><th>1</th></tr></thead><tbody><tr><td>输入1</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>输出</td><td>1</td><td>0</td><td>0</td><td>1</td></tr></tbody></table><p>使用异或门和非门组合：</p>',36)])])}const p=a(r,[["render",n]]),i=JSON.parse('{"path":"/article/hbk9cldx/","title":"逻辑门","lang":"zh-CN","frontmatter":{"title":"逻辑门","date":"2025-08-29T00:00:00.000Z","category":"Hardware","createTime":"2025/08/29 22:36:42","permalink":"/article/hbk9cldx/","description":"所有逻辑门都可以使用与非门来组合 与非门（NAND）： 两个输入有一个为0时那么输出1，只有两个输入位都为1时输出0。 非门（NOT）： 输出和输入相反。单输入逻辑门 与门（AND）： 两个输入只要有一个输入为0就输出0，只有两个输入都为1时输出1 或非门（NOR）： 两个输入有一个为1就输出0，只有两个输入位都为0时才输出1。 或门（OR）： 两个输...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"逻辑门\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-29T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-01T10:02:10.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://zhenghaoyang.cn/blog/article/hbk9cldx/"}],["meta",{"property":"og:site_name","content":"Maiiiiiid"}],["meta",{"property":"og:title","content":"逻辑门"}],["meta",{"property":"og:description","content":"所有逻辑门都可以使用与非门来组合 与非门（NAND）： 两个输入有一个为0时那么输出1，只有两个输入位都为1时输出0。 非门（NOT）： 输出和输入相反。单输入逻辑门 与门（AND）： 两个输入只要有一个输入为0就输出0，只有两个输入都为1时输出1 或非门（NOR）： 两个输入有一个为1就输出0，只有两个输入位都为0时才输出1。 或门（OR）： 两个输..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-01T10:02:10.000Z"}],["meta",{"property":"article:published_time","content":"2025-08-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-01T10:02:10.000Z"}]]},"readingTime":{"minutes":2.62,"words":786},"git":{"createdTime":1756485309000,"updatedTime":1756720930000,"contributors":[{"name":"Maid","username":"Maid","email":"zhp92@outlook.com","commits":2,"avatar":"https://avatars.githubusercontent.com/Maid?v=4","url":"https://github.com/Maid"}]},"autoDesc":true,"filePathRelative":"posts/logic-gates.md","headers":[],"categoryList":[{"id":"18958e","sort":10000,"name":"posts"}]}');export{p as comp,i as data};
